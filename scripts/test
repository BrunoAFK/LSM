#!/bin/bash

# Information header
# Author: Bruno Pavelja - Bruno_AFK - Paveljame IT      
# Web: pavelja.me
# Github: github.com/brunoafk
# Version: 1.0
# Description: A test script

# Function to display help information
show_help() {
    echo -e "\e[1;34mTest Script v1.0\e[0m"
    echo
    echo -e "\e[1;32mDescription:\e[0m"
    echo "  This script demonstrates various bash script functionalities and argument handling."
    echo
    echo -e "\e[1;33mUsage:\e[0m"
    echo "  ./test.sh [COMMAND] [ARGS]"
    echo
    echo -e "\e[1;33mCommands:\e[0m"
    printf "%-15s %-50s\n" "help, -h" "Show this help message"
    printf "%-15s %-50s\n" "echo [TEXT]" "Echo back the provided text"
    printf "%-15s %-50s\n" "list" "List files in current directory"
    printf "%-15s %-50s\n" "date" "Show current date and time"
}

# Check if help is requested
if [[ "$1" == "-h" || "$1" == "help" ]]; then
    show_help
    exit 0
fi

# Handle different commands
case "$1" in
    "echo")
        shift  # Remove first argument
        echo -e "\e[1;36müì¢ Echo Output:\e[0m"
        echo -e "\e[1;33m$@\e[0m"
        ;;
    "list")
        echo -e "\e[1;36müìÇ Directory Contents:\e[0m"
        echo -e "\e[1;33mLocation: $(pwd)\e[0m"
        echo -e "\e[1;33mTotal items: $(ls -1 | wc -l)\e[0m"
        echo "----------------------------------------"
        # Enhanced ls with colors and formatting
        ls -la --color=always | awk '
            NR==1 {print "\033[1;34m" $0 "\033[0m"; next}
            {
                if($1 ~ /^d/) printf "\033[1;36m%s\033[0m\n", $0;
                else if($1 ~ /^-.*x/) printf "\033[1;32m%s\033[0m\n", $0;
                else printf "\033[0;37m%s\033[0m\n", $0;
            }'
        echo "----------------------------------------"
        echo -e "\e[1;90m‚ÑπÔ∏è  Colors: \e[1;36mDirectories\e[0m, \e[1;32mExecutables\e[0m, \e[0;37mFiles\e[0m"
        ;;
    "date")
        echo -e "\e[1;36müïí Time Information:\e[0m"
        echo -e "\e[1;33mCurrent Time: \e[0m$(date +"%I:%M:%S %p")"
        echo -e "\e[1;33mDate: \e[0m$(date +"%A, %B %d, %Y")"
        echo -e "\e[1;33mTimezone: \e[0m$(date +"%Z")"
        echo -e "\e[1;33mUnix Timestamp: \e[0m$(date +%s)"
        echo -e "\e[1;33mWeek Number: \e[0m$(date +%V)"
        echo
        # ASCII art clock (basic)
        hour=$(date +%I)
        echo -e "\e[1;35m   ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê"
        echo -e "   ‚îÇ  ${hour}:$(date +%M)  ‚îÇ"
        echo -e "   ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò\e[0m"
        ;;
    *)
        echo -e "\e[1;31m‚ùå Error:\e[0m Invalid command. Use 'help' for usage information."
        exit 1
        ;;
esac